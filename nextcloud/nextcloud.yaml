apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nextcloud-storage
  labels:
    type: local
spec:
  capacity:
    storage: 500Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /opt/containers/nginx/data/nextcloud
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-nextcloud-storage
spec:
  volumeName: pv-nextcloud-storage
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
  labels:
    app: nextcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nextcloud
  template:
    metadata:
      labels:
        app: nextcloud
    spec:
      containers:
        - name: nextcloud
          resources:
          image: nextcloud:23.0-fpm
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: nextcloud-storage
              mountPath: /var/www/html
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                 name: postgres-configmap
                 key: database_url
            - name: POSTGRES_DB
              value: nextcloud
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: nextcloud-secret
                  key: nextcloud-db-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nextcloud-secret
                  key: nextcloud-db-password
            - name: NEXTCLOUD_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: nextcloud-secret
                  key: nextcloud-admin-user
            - name: NEXTCLOUD_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nextcloud-secret
                  key: nextcloud-admin-password
      volumes:
        - name: nextcloud-storage
          persistentVolumeClaim:
            claimName: pvc-nextcloud-storage
---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud
spec:
  selector:
    app: nextcloud
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud-proxy
  labels:
    app: nextcloud-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nextcloud-proxy
  template:
    metadata:
      labels:
        app: nextcloud-proxy
    spec:
      containers:
        - name: nextcloud-proxy
          resources:
          image: nginx:1.21.6-alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nextcloud-storage
              mountPath: /var/www/html
            - mountPath: /etc/nginx # mount nginx-conf volumn to /etc/nginx
              readOnly: true
              name: nginx-conf
            - mountPath: /var/log/nginx
              name: log
          env:
            - name: NEXTCLOUD_URL
              valueFrom:
                configMapKeyRef:
                 name: nextcloud-configmap
                 key: nextcloud_url
      volumes:
        - name: nextcloud-storage
          persistentVolumeClaim:
            claimName: pvc-nextcloud-storage
        - name: nginx-conf
          configMap:
            name: nextcloud-configmap # place ConfigMap `nginx-conf` on /etc/nginx
            items:
              - key: nginx.conf
                path: nginx.conf
              - key: files.jleo.tech.conf
                path: conf.d/files.jleo.tech.conf # dig directory
        - name: log
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud
spec:
  selector:
    app: nextcloud
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud-proxy
spec:
  selector:
    app: nextcloud-proxy
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nextcloud-ingress
  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - files.jleo.tech
    secretName: ssl-cert-nextcloud
  rules:
  - host: files.jleo.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nextcloud-proxy
            port:
              number: 80
